@page "/library-books"

@using Library.Models
@using System.Linq;

@inject HttpClient http;

@if (books is null)
{
	<p>Fetching data...</p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>ID</th>
				<th>Title</th>
				<th>Author</th>
				<th>Publication Year</th>
				<th>Available</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var book in books)
			{
				<tr>
					<td>@book.Id</td>
					<td>@book.Title</td>
					<td>@book.Author</td>
					<td>@book.PublicationYear</td>
					<td>@(!book.IsLoaned.Value ? "Yes" : "No")</td>
				</tr>
			}
		</tbody>
	</table>	
}

@code {
	private IEnumerable<Book>? books { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await LoadSampleDataAsync();
	}

	private async Task LoadSampleDataAsync()
	{
		books = await http.GetFromJsonAsync<IEnumerable<Book>>("sample-data/books.json");

		if (books is not null)
			books.ToList().ForEach(book => book.IsLoaned = false);
	}
}
