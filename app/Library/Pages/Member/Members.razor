@page "/member/library-members"

@using Library.Models
@using Library.Services

@inject IMemberService memberService
@inject NavigationManager navManager

<PageTitle>Library - Members</PageTitle>

<header>
    <h3 class="fw-bold">Library Members</h3>

    <div class="d-flex justify-content-end mb-3">
        <button class="btn btn-outline-primary me-2" @onclick="ShowAddMemberModal">
            <i class="bi bi-plus-lg"></i> Add New
        </button>
    </div>
</header>

@if (showModal)
{
    <div class="modal-backdrop" style="position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);z-index:1040;"></div>
    <div class="modal" style="display:block;position:fixed;top:20%;left:50%;transform:translate(-50%, -20%);z-index:1050;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Member</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="newMember" OnValidSubmit="AddMember">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">First Name</label>
                            <input type="text" class="form-control" @bind="newMember.FirstName" />
                            <ValidationMessage For="@(() => newMember.FirstName)" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Last Name</label>
                            <input type="text" class="form-control" @bind="newMember.LastName" />
                            <ValidationMessage For="@(() => newMember.LastName)" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email Address</label>
                            <input type="email" class="form-control" @bind="newMember.Email" />
                            <ValidationMessage For="@(() => newMember.Email)" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Date of Birth</label>
                            <input type="date" class="form-control" @bind="newMember.BirthDate" />
                            <ValidationMessage For="@(() => newMember.BirthDate)" />
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email Address</th>
            <th>Age</th>
            <th>Date of Birth</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (members is null)
        {
            <tr>
                <td colspan="5" class="text-center">
                    <LoadingSpinner Message="Fetching data, please wait..."/>
                </td>
            </tr>
        
        }
        else if (members is not null && !members.Any())
        {
            <tr>
                <td colspan="5" class="text-center">
                    Nothing to see here.
                </td>
            </tr>
        }
        else
        {
            @foreach (var member in members)
            {
                <tr>
                    <td>
                        <a href="/member/details/@member.Id" class="text-decoration-none" title="Show @(member.FullName) details">@member.FullName</a>
                    </td>
                    <td>@member.Email</td>
                    <td>@member.Age</td>
                    <td>@member.BirthDate.ToString("yyyy.MMMM.dd")</td>
                    <td>
                        <a class="btn btn-primary" title="Edit @member.FullName's data" href="member/edit/@member.Id">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <a class="btn btn-outline-danger" title="Delete member">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private bool showModal = false;

    private IEnumerable<Member>? members { get; set; }

    private Member newMember;

    protected override async Task OnInitializedAsync()
    {
        members = await memberService.GetAllMembersAsync(); 
    }

    private async void AddMember()
    {
        await memberService.CreateMemberAsync(newMember);

        members = await memberService.GetAllMembersAsync(); 

        CloseModal();
        StateHasChanged();
    }

    private void ShowAddMemberModal()
    {
        newMember = new Member();
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }
}
